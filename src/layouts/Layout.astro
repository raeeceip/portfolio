---
import "../styles/global.css";
import "../styles/notebook.css"; // New stylesheet for notebook enhancements
import "../styles/contrast.css"; // Consolidated contrast styles
import NavBar from "@components/layout/NavBar.astro";
import CoverPage from "@components/layout/CoverPage.astro";
import Footer from "@components/layout/Footer.astro";
import PrivacyBanner from "@components/items/PrivacyBanner.astro";

export interface Props {
  title: string;
  desc?: string;
  keywords?: string;
  metaImage?: string;
  pubDate?: Date;
  tags?: string[];
}

let { title, desc, metaImage, keywords, tags = [], pubDate = null } = Astro.props;
if (!title) title = "chiso";
if (!desc) desc = "Learning, exploring and making software I'd use.";
if (!metaImage) metaImage = "/images/meta.png";
if (!keywords) keywords = "chiso, raeeceip, chiso, osasona, go, typescript, javascript, rust, gleam, software, engineer";

const metaImgUrl = metaImage;
---

<!doctype html>
<html lang="en" class="light">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Updated theme color to match notebook theme -->
    <meta name="theme-color" content="#51733F" />
    <meta name="description" content={desc} />
    <meta name="keywords" content={keywords} />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <!-- Font preconnect for faster loading -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    
    <!-- Cookbook-specific fonts with display swap -->
    <link href="https://fonts.googleapis.com/css2?family=Caveat:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Patrick+Hand&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Crimson+Pro:ital,wght@0,400;0,600;0,700;1,400&display=swap" rel="stylesheet">

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="Chiso's Notebook" />
    <meta property="og:url" content={`https://chiso.dev${Astro.url.pathname}`} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={desc} />
    <meta property="og:image" content="https://chiso.dev/images/notebook-meta.png" />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:image:alt" content="Chiso's cookbook page" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@gnchiso" />
    <meta name="twitter:url" content={`https://chiso.dev${Astro.url.pathname}`} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={desc} />
    <meta name="twitter:image" content={metaImgUrl} />
    
    <title>{title}</title>

    <!-- Preload critical cookbook assets -->
    <link rel="preload" href="/images/paper-texture.png" as="image" />

    <!-- Cookbook Animation Script -->
    <script src="/scripts/cover-animation.js" defer></script>
    
    <!-- Force light mode as default -->
    <script is:inline>
      // Force light mode as default
      if (!localStorage.getItem("theme")) {
        localStorage.setItem("theme", "light");
        document.documentElement.classList.remove("dark");
      }
    </script>

    {!!pubDate ? <meta property="article:published_time" content={pubDate.toISOString()} /> : null}
    {tags?.map((tag) => <meta property="article:tag" content={tag} />)}

    <script src="/vendor/alpine-persist.js" defer is:inline></script>
    <script src="/vendor/alpine.js" defer is:inline></script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4414445126244161"
     crossorigin="anonymous"></script>

    <!-- Using data-astro-transition="none" to disable built-in transitions -->
    <meta name="astro:transition" content="none" />
    <script is:inline src="/scripts/notebook.js"></script>
    <script is:inline>
      // Cache the current theme to prevent flashing during transitions
      const currentTheme = localStorage.getItem('theme') === 'dark' || 
        (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches) ? 'dark' : 'light';
      
      // Apply theme immediately to prevent flash during transitions
      document.documentElement.classList.remove('light', 'dark');
      document.documentElement.classList.add(currentTheme);
      
      // Store theme in a data attribute for easier access during transitions
      document.documentElement.dataset.theme = currentTheme;
    </script>
    <!-- Include our custom transitions script -->
    <script is:inline src="/scripts/customTransitions.js"></script>
    
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const headers = document.querySelectorAll("[data-section-header]");
        if (headers?.length > 1) {
          headers.forEach((header) => {
            header?.addEventListener("click", () => {
              const slug = header.id;
              const url = window.location.protocol + "//" + window.location.host + window.location.pathname;
              const hash = `#${slug}`;
              const fullUrl = `${url}${hash}`;

              navigator.clipboard.writeText(fullUrl);
              window.location.hash = slug;
            });
          });
        }
      });
    </script>
    
    <!-- Custom draggable feature cards script -->
    <script src="/scripts/draggable.js" defer></script>
    
  </head>
  <body>
    <!-- Cover Page Component - will be controlled by JS -->
    <CoverPage />
    
    <!-- Enhanced notebook container for page transitions -->
    <div class="notebook-container" id="notebook-container" transition:animate="slide">
      <NavBar />
      <div class="notebook-content" id="notebook-content">
        <div class="page-corner-fold"></div>
        <slot />
      </div>
      <Footer />
      <PrivacyBanner />
    </div>
    
    <script is:inline>
      // Cover page animation script - improved to only show once
      document.addEventListener('DOMContentLoaded', function() {
        const coverPage = document.getElementById('notebook-cover');
        const notebookSpine = document.getElementById('notebook-spine');
        
        if (!coverPage) return;
        
        // Check for first-time visit
        const isFirstVisit = !localStorage.getItem('visited');
        
        if (!isFirstVisit) {
          // For returning visitors, immediately remove the cover
          coverPage.remove();
          if (notebookSpine) notebookSpine.remove();
        } else {
          // First-time visitor - mark as visited immediately
          localStorage.setItem('visited', 'true');
          
          // Make sure cover is visible with proper styling
          coverPage.style.display = 'flex';
          if (notebookSpine) notebookSpine.style.display = 'block';
          // Override any conflicting inline styles
          coverPage.style.animationDuration = '2.5s !important';
          coverPage.style.animationFillMode = 'forwards';
          coverPage.style.transition = 'none';

          
          // Trigger the open animation after a short delay
          setTimeout(() => {
            // Add the open class to trigger animation via CSS transition
            coverPage.classList.add('open');
            
            // After animation completes, completely remove the cover elements
            // Duration matches the CSS animation time (2.5s) + small buffer
            setTimeout(() => {
              coverPage.remove();
              if (notebookSpine) notebookSpine.remove();
            }, 2700); 
          }, 3000); // Display duration before animation starts - reduced from 10s
        }
      });
      
      // Fast page transitions
      document.addEventListener('astro:page-load', () => {
        // For page transitions
        const notebookContent = document.getElementById('notebook-content');
        
        // Faster rip-through effect on page changes
        if (notebookContent) {
          notebookContent.classList.add('fast-transition');
          setTimeout(() => {
            notebookContent.classList.remove('fast-transition');
          }, 300);
        }
      });
    </script>
    
    <!-- Add notebook enhancements script -->
    <script src="/scripts/notebook.js" defer></script>
    
    <!-- Service Worker Registration -->
    <script>
      // Register service worker for offline support and improved performance
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/service-worker.js')
            .then(registration => {
              console.log('Service Worker registered with scope:', registration.scope);
            })
            .catch(error => {
              console.error('Service Worker registration failed:', error);
            });
        });
      }
    </script>
  </body>
</html>