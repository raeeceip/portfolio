---
import Layout from "@layouts/Layout.astro";
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";

import Tags from "@components/misc/Tags.astro";
import PageNotes from "@components/interactive/PageNotes.astro";

import TableOfContents from "@components/layout/TableOfContents.astro";
import Code from "@components/mdx/Code.astro";
import H1 from "@components/mdx/H1.astro";
import H2 from "@components/mdx/H2.astro";
import H3 from "@components/mdx/H3.astro";
import { getMetaUrl } from "@lib/utils";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({ params: { slug: post.slug }, props: { post } }));
}

let { post } = Astro.props;

if (!post) {
  return new Response(null, {
    status: 404,
    statusText: "Not Found",
  });
}

let {
  data: { title, description: desc, tags, keywords, date, image },
  slug,
} = post;
const { Content, headings } = await post.render();

const metaUrl = image ? image : getMetaUrl(title, date);
const minuteReadTime = Math.ceil(post.body.length / 1500);
---

<style>
  [data-icon] {
    display: inline-block;
  }

  .container-full {
    width: 100%;
    max-width: 100%;
    margin: 0;
    padding: 0;
  }
  
  .recipe-container {
    position: relative;
    background-color: theme("colors.secondary.100");
    padding: 2rem;
    border-radius: 0.5rem;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
    border: 1px solid theme("colors.primary.100");
    margin-bottom: 2rem;
  }
  
  .dark .recipe-container {
    background-color: theme("colors.secondary.900");
    border-color: theme("colors.primary.900");
  }
  
  .recipe-title {
    font-family: var(--header-font-family);
    font-size: 2.5rem;
    color: theme("colors.primary.700");
    margin-bottom: 1rem;
    line-height: 1.2;
    position: relative;
  }
  
  .dark .recipe-title {
    color: theme("colors.primary.300");
  }
  
  .recipe-title::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: -6px;
    width: 80px;
    height: 2px;
    background-color: theme("colors.primary.500");
  }
  
  .recipe-info {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin: 1.5rem 0;
    font-size: 0.95rem;
    color: theme("colors.secondary.600");
  }
  
  .recipe-info-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .tags-container {
    margin: 1.5rem 0;
  }
  
  /* Notebook paper styling for the recipe content */
  .recipe-content {
    position: relative;
    background-color: var(--notebook-paper-color);
    border-radius: 0.5rem;
    padding: 2rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    font-family: var(--body-font-family);
    line-height: 1.6;
    
    /* Notebook paper background */
    background-image: 
      linear-gradient(
        transparent 0px,
        transparent 24px,
        var(--notebook-line-color) 25px
      ),
      linear-gradient(
        90deg,
        var(--notebook-margin-color),
        var(--notebook-margin-color) 30px,
        transparent 30px
      );
    background-size: 100% 25px, 100% 100%;
    background-repeat: repeat;
  }
  
  .dark .recipe-content {
    --notebook-paper-color: theme("colors.secondary.800");
    --notebook-line-color: rgba(255, 255, 255, 0.07);
    --notebook-margin-color: rgba(160, 212, 104, 0.07);
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  }
  
  .sidebar-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  /* Make the table of contents and cooking info sticky on large screens */
  @media (min-width: 1280px) {
    .sidebar-container {
      position: sticky;
      top: 2rem;
    }
  }
  
  /* Cookbook-style sticky note for recipe info */
  .recipe-note {
    background-color: rgba(255, 252, 232, 0.7);
    border-left: 3px solid theme("colors.primary.600");
    border-radius: 0.25rem;
    padding: 1rem;
    transform: rotate(-1deg);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
    font-family: var(--handwriting-font);
  }
  
  .dark .recipe-note {
    background-color: rgba(74, 85, 104, 0.2);
    border-left-color: theme("colors.primary.500");
  }
  
  .recipe-note-title {
    font-family: var(--header-font-family);
    font-size: 1.25rem;
    margin-bottom: 0.75rem;
    color: theme("colors.primary.700");
  }
  
  .dark .recipe-note-title {
    color: theme("colors.primary.300");
  }
  
  /* Full-width blog post container on desktop */
  @media (min-width: 1024px) {
    .blog-fullwidth {
      max-width: 100%;
      margin: 0;
    }
    
    .content-grid {
      display: grid;
      grid-template-columns: 1fr minmax(0, 3fr) 1fr;
      gap: 2rem;
    }
  }
</style>

<Layout {title} {desc} metaImage={metaUrl} {keywords} {tags} pubDate={date}>
  <div class="container-full blog-fullwidth">
    <div class="content-grid">
      <!-- Left sidebar with table of contents -->
      <aside class="hidden lg:block sidebar-container">
        <div class="recipe-note">
          <h4 class="recipe-note-title">Contents</h4>
          <TableOfContents {headings} asSidebar />
        </div>
      </aside>
      
      <!-- Main content area -->
      <main>
        <article class="recipe-container">
          <header>
            <h1 class="recipe-title">{title}</h1>
            
            <div class="recipe-info">
              <div class="recipe-info-item">
                <Icon name="tabler:calendar" />
                <span>{new Date(date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
              </div>
              
              <div class="recipe-info-item">
                <Icon name="tabler:clock" />
                <span>{minuteReadTime} min read</span>
              </div>
            </div>
            
            <div class="tags-container">
              <Tags {tags} />
            </div>
          </header>
          
          <div class="recipe-content blog-content">
            <Content components={{ h1: H1, h2: H2, h3: H3, pre: Code }} />
            
            <!-- Page Notes component - allows users to add their cookbook notes -->
            <PageNotes postSlug={slug} />
          </div>
        </article>
      </main>
      
      <!-- Right sidebar with related info -->
      <aside class="hidden lg:block sidebar-container">
        <div class="recipe-note">
          <h4 class="recipe-note-title">Recipe Info</h4>
          <div class="space-y-3">
            <div>
              <div class="text-sm font-medium">Cooking Time:</div>
              <div class="text-lg">{minuteReadTime} min read</div>
            </div>
            
            <div>
              <div class="text-sm font-medium">Published:</div>
              <div>{new Date(date).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</div>
            </div>
            
            <div>
              <div class="text-sm font-medium">Share Recipe:</div>
              <div class="flex gap-3 mt-1">
                <a href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(Astro.url)}&text=${encodeURIComponent(title)}`} target="_blank" rel="noopener noreferrer" class="text-twitter hover:text-twitter/80 dark:text-twitter/90 dark:hover:text-twitter">
                  <Icon name="tabler:brand-twitter" />
                </a>
                <a href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url)}`} target="_blank" rel="noopener noreferrer" class="text-linkedin hover:text-linkedin/80 dark:text-linkedin/90 dark:hover:text-linkedin">
                  <Icon name="tabler:brand-linkedin" />
                </a>
              </div>
            </div>
          </div>
        </div>
      </aside>
    </div>
  </div>
</Layout>