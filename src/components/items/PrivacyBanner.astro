---
// PrivacyBanner.astro
interface Props {
  class?: string;
}

const script = `
  const banner = document.getElementById('privacy-banner');
  const acceptButton = document.getElementById('accept-privacy');
  const closeButton = document.getElementById('close-privacy');
  const resetButton = document.getElementById('reset-privacy');

  // Check if user has already accepted
  if (!localStorage.getItem('privacy-consent')) {
    banner.classList.remove('hidden');
  }

  acceptButton?.addEventListener('click', () => {
    localStorage.setItem('privacy-consent', 'true');
    banner.classList.add('hidden');
  });

  closeButton?.addEventListener('click', () => {
    banner.classList.add('hidden');
  });

  // Test reset button
  resetButton?.addEventListener('click', () => {
    localStorage.removeItem('privacy-consent');
    banner.classList.remove('hidden');
  });
`;
---

<div id="privacy-banner" class="fixed bottom-0 left-0 right-0 hidden z-50">
  <div class="sticky-note-banner bg-primary-50 dark:bg-primary-900/80 border-t border-primary-200 dark:border-primary-800 p-4 shadow-lg relative">
    <div class="container mx-auto max-w-4xl flex items-center justify-between gap-4">
      <p class="text-sm text-primary-700 dark:text-primary-300 handwritten">
        We use cookies to improve your cooking experience. By clicking "Accept," you consent to our use of cookies. Read our
        <a href="/privacy" class="underline hover:text-primary-800 dark:hover:text-primary-200">
          Privacy Policy
        </a>
      </p>
      <div class="flex items-center gap-4">
        <button
          id="accept-privacy"
          class="px-4 py-2 bg-primary-600 text-white text-sm rounded-md hover:bg-primary-700 dark:bg-primary-700 dark:hover:bg-primary-600 transition-colors transform hover:-rotate-1 handwritten"
        >
          Accept
        </button>
        <button
          id="close-privacy"
          class="text-primary-600 dark:text-primary-400 hover:text-primary-800 dark:hover:text-primary-300 transition-colors p-2 rounded-md"
          aria-label="Close"
        >
          <span class="sr-only">Close</span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-5 h-5"
            aria-hidden="true"
          >
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
    
    <!-- Thumbtack pins -->
    <div class="absolute -top-2 left-6 w-4 h-4 bg-primary-500 dark:bg-primary-600 rounded-full shadow-sm"></div>
    <div class="absolute -top-2 right-6 w-4 h-4 bg-primary-500 dark:bg-primary-600 rounded-full shadow-sm"></div>
  </div>
</div>

<style>
  .handwritten {
    font-family: var(--handwriting-font);
  }
  
  .sticky-note-banner {
    position: relative;
    overflow: hidden;
  }
  
  .sticky-note-banner::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      repeating-linear-gradient(
        transparent,
        transparent 20px,
        rgba(81, 115, 63, 0.05) 20px,
        rgba(81, 115, 63, 0.05) 21px
      );
    pointer-events: none;
  }
  
  .dark .sticky-note-banner::before {
    background-image: 
      repeating-linear-gradient(
        transparent,
        transparent 20px,
        rgba(255, 255, 255, 0.03) 20px,
        rgba(255, 255, 255, 0.03) 21px
      );
  }
</style>
  
<!-- {import.meta.env.DEV && (
  <button
    id="reset-privacy"
    class="fixed top-4 right-4 px-4 py-2 bg-red-500 text-white text-sm rounded-md hover:bg-red-600 transition-colors"
  >
    Reset Privacy Consent
  </button>
)} -->

<script set:html={script} />