---
import { Icon } from "astro-icon/components";
---

<style>
  .nav-container {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background-color: var(--notebook-paper-color);
    backdrop-filter: blur(8px);
    border-bottom: 1px dashed rgba(81, 115, 63, 0.4);
    transition: background-color 0.3s ease, border-color 0.3s ease;
    
    /* Notebook paper design */
    background-image: 
      repeating-linear-gradient(
        transparent,
        transparent 1px,
        var(--notebook-line-color) 1px,
        var(--notebook-line-color) 2px,
        transparent 2px,
        transparent 24px
      ),
      linear-gradient(
        to right,
        var(--notebook-margin-color) 30px,
        transparent 30px
      );
    background-size: 100% 24px, 100% 100%;
    box-shadow: 0 2px 8px rgba(81, 115, 63, 0.1);
  }
  
  .dark .nav-container {
    border-bottom: 1px dashed rgba(255, 255, 255, 0.2);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }
  
  /* Left side binding holes */
  .nav-container::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 15px;
    transform: translateY(-50%);
    width: 100%;
    height: 100%;
    background-image: 
      radial-gradient(
        circle at 0 25%, 
        var(--notebook-holes-color) 0, 
        var(--notebook-holes-color) 4px, 
        transparent 4px
      ),
      radial-gradient(
        circle at 0 50%, 
        var(--notebook-holes-color) 0, 
        var(--notebook-holes-color) 4px, 
        transparent 4px
      ),
      radial-gradient(
        circle at 0 75%, 
        var(--notebook-holes-color) 0, 
        var(--notebook-holes-color) 4px, 
        transparent 4px
      );
    background-size: 10px 33.33%;
    background-repeat: no-repeat;
    z-index: 1;
    pointer-events: none;
  }
  
  .nav-link {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 0.35rem;
    font-family: var(--handwriting-font);
    font-weight: 500;
    padding: 0.5rem 0;
    text-decoration: none;
    color: theme("colors.primary.700");
    transition: all 0.3s ease;
    transform: rotate(-0.5deg);
  }
  
  .nav-icon {
    color: theme("colors.primary.600");
    width: 1.25rem;
    height: 1.25rem;
  }
  
  .dark .nav-icon {
    /* color: white; - Removed as it's defined in contrast.css */
  }
  
  .dark .nav-link {
    /* color: white; - Removed as it's defined in contrast.css */
  }
  
  .nav-link::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--primary-color);
    transition: width 0.3s ease;
    opacity: 0.7;
  }
  
  .nav-link:hover {
    color: var(--primary-color);
    transform: rotate(0.5deg) translateY(-1px);
  }
  
  .nav-link:hover::after {
    width: 100%;
    opacity: 1;
  }
  
  .site-title {
    font-family: var(--handwriting-font);
    font-weight: bold;
    font-size: 1.5rem;
    color: var(--primary-color, #51733F);
    text-decoration: none;
    transition: transform 0.3s ease;
  }
  
  .site-title:hover {
    transform: translateY(-2px);
  }
  
  .dark .site-title {
    color: var(--primary-color-light, #a9c76f);
  }
  
  .theme-toggle-logo {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: var(--primary-color, #51733F);
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    transition: all 0.3s ease;
  }
  
  .theme-toggle-logo:hover {
    transform: translateY(-2px) rotate(-5deg);
  }
  
  .logo-tooltip {
    position: absolute;
    bottom: -20px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 0.7rem;
    font-style: italic;
    white-space: nowrap;
    color: var(--text-muted, #718096);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }
  
  .theme-toggle-logo:hover .logo-tooltip {
    opacity: 0.8;
  }
  
  .dark .theme-toggle-logo {
    color: var(--primary-color-light, #a9c76f);
  }
  
  .logo-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: var(--primary-color, #51733F);
  }
  
  .dark .logo-icon {
    color: var(--primary-color-light, #a9c76f);
  }
  
  /* Mobile menu button */
  .mobile-menu-button {
    display: none;
    align-items: center;
    justify-content: center;
    background-color: transparent;
    border: 1px dashed var(--primary-color);
    color: var(--primary-color);
    border-radius: 0.25rem;
    padding: 0.3rem;
    margin-right: 0.5rem;
    transform: rotate(-1deg);
  }
  
  /* Mobile navigation */
  .mobile-nav {
    position: fixed;
    top: 60px;
    left: 1rem;
    right: 1rem;
    background-color: var(--notebook-paper-color);
    border: 1px dashed rgba(81, 115, 63, 0.4);
    border-radius: 0.5rem;
    padding: 1rem;
    z-index: 999;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
    transform-origin: top center;
    transform: scale(0.95);
    opacity: 0;
    transition: all 0.2s ease-in-out;
    display: none;
    
    /* Notebook paper lines */
    background-image: 
      repeating-linear-gradient(
        transparent,
        transparent 1px,
        var(--notebook-line-color) 1px,
        var(--notebook-line-color) 2px,
        transparent 2px,
        transparent 24px
      );
    background-size: 100% 24px;
  }
  
  .mobile-nav.open {
    display: flex;
    flex-direction: column;
    transform: scale(1);
    opacity: 1;
  }
  
  .mobile-nav .nav-link {
    display: flex;
    width: 100%;
    padding: 0.75rem 0.5rem;
    border-bottom: 1px dashed rgba(81, 115, 63, 0.2);
  }
  
  .mobile-nav .nav-link:last-child {
    border-bottom: none;
  }
  
  /* Theme toggle button */
  .theme-toggle {
    background-color: transparent;
    border: 1px dashed var(--primary-color, #51733F);
    color: var(--primary-color, #51733F);
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: all 0.3s ease;
    transform: rotate(-1deg);
    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .theme-toggle:hover {
    transform: rotate(1deg);
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.15);
  }
  
  .theme-toggle svg {
    width: 1.25rem;
    height: 1.25rem;
  }
  
  /* Mobile theme toggle styling */
  .mobile-theme-toggle {
    margin-top: 1rem;
    align-self: center;
    width: 3rem;
    height: 3rem;
  }
  
  html.light .light-icon {
    display: none;
  }
  
  html.light .dark-icon {
    display: block;
  }
  
  html.dark .light-icon {
    display: block;
  }
  
  html.dark .dark-icon {
    display: none;
  }
  
  html.dark .theme-toggle {
    border-color: #a9c76f;
    color: #a9c76f;
  }
  
  /* Media queries for responsive design */
  @media (max-width: 768px) {
    .mobile-menu-button {
      display: flex;
    }
    
    .desktop-nav {
      display: none;
    }
    
    .mobile-nav.open {
      display: block;
    }
    
    .site-title {
      margin-left: 1rem; /* Less margin on mobile */
    }
  }
</style>

<nav class="nav-container w-full py-3">
  <div class="container mx-auto flex items-center justify-between px-3 md:px-6">
    <!-- Chef hat logo now toggles theme -->
    <div class="flex items-center gap-4">
      <a href="/" class="site-title text-xl">
        <span>chiso</span>
      </a>
      
      <!-- Separate chef hat for theme toggle -->
      <button id="logo-theme-toggle" class="theme-toggle-logo" aria-label="Toggle dark mode">
        <span class="logo-icon"><Icon name="tabler:chef-hat" /></span>
        <span class="logo-tooltip">Change theme</span>
      </button>
    </div>
    
    <!-- Mobile menu button -->
    <button 
      id="mobile-menu-toggle"
      class="mobile-menu-button" 
      aria-label="Toggle mobile menu"
    >
      <Icon name="tabler:menu-2" />
    </button>
    
    <!-- Desktop navigation -->
    <div class="desktop-nav flex items-center md:text-base gap-4 md:gap-6 pl-4">
      <a href="/" class="nav-link">
        <Icon name="tabler:home" class="nav-icon" />
        <span>Home</span>
      </a>
      <a href="/blog" class="nav-link">
        <Icon name="tabler:book" class="nav-icon" />
        <span>Recipe Journal</span>
      </a>
      <a href="/notes" class="nav-link">
        <Icon name="tabler:note" class="nav-icon" />
        <span>Quick Notes</span>
      </a>
      <a href="/projects" class="nav-link">
        <Icon name="tabler:books" class="nav-icon" />
        <span>Recipe Collection</span>
      </a>
      <a href="/tools" class="nav-link">
        <Icon name="tabler:tools" class="nav-icon" />
        <span>Kitchen Tools</span>
      </a>
    </div>

    <!-- Mobile navigation menu -->
    <div id="mobile-nav" class="mobile-nav">
      <a href="/" class="nav-link">
        <Icon name="tabler:home" class="nav-icon" />
        <span>Home</span>
      </a>
      <a href="/blog" class="nav-link">
        <Icon name="tabler:book" class="nav-icon" />
        <span>Recipe Journal</span>
      </a>
      <a href="/notes" class="nav-link">
        <Icon name="tabler:note" class="nav-icon" />
        <span>Quick Notes</span>
      </a>
      <a href="/projects" class="nav-link">
        <Icon name="tabler:books" class="nav-icon" />
        <span>Recipe Collection</span>
      </a>
      <a href="/tools" class="nav-link">
        <Icon name="tabler:tools" class="nav-icon" />
        <span>Kitchen Tools</span>
      </a>
      
      <!-- Theme toggle button in mobile menu -->
      <button id="mobile-theme-toggle" class="theme-toggle mobile-theme-toggle">
        <Icon name="tabler:moon" class="dark-icon" />
        <Icon name="tabler:sun" class="light-icon" />
      </button>
    </div>

  </div>
</nav>

<div class="h-16"></div> <!-- Spacer to account for fixed navbar -->

<script>
  // Simple mobile menu functionality without Alpine.js
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.getElementById('mobile-menu-toggle');
    const mobileNav = document.getElementById('mobile-nav');
    
    if (mobileMenuButton && mobileNav) {
      mobileMenuButton.addEventListener('click', function() {
        if (mobileNav.classList.contains('open')) {
          mobileNav.classList.remove('open');
        } else {
          mobileNav.classList.add('open');
        }
      });
      
      // Close mobile menu when clicking on links
      const mobileLinks = mobileNav.querySelectorAll('a');
      mobileLinks.forEach(link => {
        link.addEventListener('click', function() {
          mobileNav.classList.remove('open');
        });
      });
    }
  });
</script>

<script is:inline>
  // Theme handling
  function handleThemeChange(isDarkMode) {
    document.documentElement.classList.toggle("dark", isDarkMode);
    localStorage.setItem("theme", isDarkMode ? "dark" : "light");
    
    // Toggle aria-pressed state on the logo
    const logoToggle = document.getElementById('logo-theme-toggle');
    if (logoToggle) {
      logoToggle.setAttribute('aria-pressed', isDarkMode ? 'true' : 'false');
    }
  }

  // Initialize theme on page load
  document.addEventListener('DOMContentLoaded', function() {
    // Check for saved theme or prefer-color-scheme
    const savedTheme = localStorage.getItem("theme");
    const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
    const isDarkMode = savedTheme === "dark" || (!savedTheme && prefersDark);
    
    // Set initial state
    handleThemeChange(isDarkMode);
    
    // Add event listener to logo for theme toggle
    const logoToggle = document.getElementById('logo-theme-toggle');
    if (logoToggle) {
      logoToggle.setAttribute('role', 'button');
      logoToggle.setAttribute('aria-pressed', isDarkMode ? 'true' : 'false');
      logoToggle.setAttribute('tabindex', '0');
      logoToggle.setAttribute('aria-label', 'Toggle dark mode');
      
      logoToggle.addEventListener('click', function() {
        const currentMode = document.documentElement.classList.contains('dark');
        handleThemeChange(!currentMode);
      });
      
      // Also allow keyboard activation with Enter key
      logoToggle.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          const currentMode = document.documentElement.classList.contains('dark');
          handleThemeChange(!currentMode);
        }
      });
    }
    
    // Handle mobile theme toggle
    const mobileThemeToggle = document.getElementById('mobile-theme-toggle');
    if (mobileThemeToggle) {
      mobileThemeToggle.addEventListener('click', function() {
        const currentMode = document.documentElement.classList.contains('dark');
        handleThemeChange(!currentMode);
      });
    }
    
    // Mobile menu toggle
    const mobileMenuButton = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', function() {
        mobileMenu.classList.toggle('open');
        mobileMenuButton.setAttribute(
          'aria-expanded',
          mobileMenu.classList.contains('open').toString()
        );
      });
    }
  });
</script>