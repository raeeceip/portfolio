---
import { Icon } from "astro-icon/components";
---

<style>
  .nav-container {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    background-color: var(--notebook-paper-color);
    backdrop-filter: blur(8px);
    border-bottom: 1px dashed rgba(81, 115, 63, 0.4);
    transition: background-color 0.3s ease, border-color 0.3s ease;
    
    /* Notebook paper design */
    background-image: 
      repeating-linear-gradient(
        transparent,
        transparent 1px,
        var(--notebook-line-color) 1px,
        var(--notebook-line-color) 2px,
        transparent 2px,
        transparent 24px
      ),
      linear-gradient(
        to right,
        var(--notebook-margin-color) 30px,
        transparent 30px
      );
    background-size: 100% 24px, 100% 100%;
    box-shadow: 0 2px 8px rgba(81, 115, 63, 0.1);
  }
  
  .dark .nav-container {
    border-bottom: 1px dashed rgba(255, 255, 255, 0.1);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }
  
  /* Left side binding holes */
  .nav-container::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 15px;
    transform: translateY(-50%);
    width: 100%;
    height: 100%;
    background-image: 
      radial-gradient(
        circle at 0 50%, 
        var(--notebook-holes-color) 0, 
        var(--notebook-holes-color) 4px, 
        transparent 4px
      );
    background-size: 30px 8px;
    background-repeat: repeat-y;
    pointer-events: none;
    z-index: 10;
  }
  
  .nav-link {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 0.35rem;
    font-family: var(--cursive-font);
    font-weight: 500;
    padding: 0.5rem 0;
    text-decoration: none;
    color: theme("colors.primary.700");
    transition: all 0.3s ease;
    transform: rotate(-0.5deg);
  }
  
  .nav-icon {
    color: theme("colors.primary.600");
    width: 1.25rem;
    height: 1.25rem;
  }
  
  .dark .nav-icon {
    color: theme("colors.primary.400");
  }
  
  .dark .nav-link {
    color: theme("colors.primary.300");
  }
  
  .nav-link::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--primary-color);
    transition: width 0.3s ease;
    opacity: 0.7;
  }
  
  .nav-link:hover {
    color: var(--primary-color);
    transform: rotate(0.5deg) translateY(-1px);
  }
  
  .nav-link:hover::after {
    width: 100%;
    opacity: 1;
  }
  
  .site-logo {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-family: var(--cursive-font);
    font-weight: 700;
    color: var(--primary-color);
    position: relative;
    margin-left: 2rem;
    transition: transform 0.3s ease;
  }
  
  .site-logo:hover {
    transform: translateY(-1px) rotate(1deg);
  }
  
  .logo-icon {
    display: inline-block;
    color: var(--primary-color);
  }

  /* Theme toggle button */
  .theme-toggle {
    background-color: transparent;
    border: 1px dashed var(--primary-color);
    color: var(--primary-color);
    padding: 0.5rem;
    border-radius: 0.25rem;
    transition: all 0.3s ease;
    transform: rotate(-1deg);
    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);
  }
  
  .theme-toggle:hover {
    transform: rotate(1deg);
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.15);
  }
  
  [data-icon="tabler:moon"], [data-icon="tabler:sun"] {
    font-size: 1.25rem;
  }
</style>

<nav class="nav-container w-full py-4" x-data>
  <div class="notebook-tabs">
    <div class="tab active">
      <Icon name="tabler:home" class="tab-icon" />
      <span>Home</span>
    </div>
    <div class="tab">
      <Icon name="tabler:book" class="tab-icon" />
      <span>Recipes</span>
    </div>
    <div class="tab">
      <Icon name="tabler:note" class="tab-icon" />
      <span>Notes</span>
    </div>
    <div class="tab">
      <Icon name="tabler:tools" class="tab-icon" />
      <span>Tools</span>
    </div>
  </div>
  
  <div class="container mx-auto flex items-center justify-between px-4 md:px-6">
    <a href="/" class="site-logo text-xl">
      <span class="logo-icon"><Icon name="tabler:chef-hat" /></span>
      <span>chiso</span>
    </a>
    
    <div class="flex items-center md:text-base gap-4 md:gap-8 pl-6">
      <a href="/" class="nav-link">
        <Icon name="tabler:home" class="nav-icon" />
        <span>Home</span>
      </a>
      <a href="/blog" class="nav-link">
        <Icon name="tabler:book" class="nav-icon" />
        <span>Recipe Journal</span>
      </a>
      <a href="/notes" class="nav-link">
        <Icon name="tabler:note" class="nav-icon" />
        <span>Quick Notes</span>
      </a>
      <a href="/projects" class="nav-link">
        <Icon name="tabler:books" class="nav-icon" />
        <span>Recipe Collection</span>
      </a>
      <a href="/tools" class="nav-link">
        <Icon name="tabler:tools" class="nav-icon" />
        <span>Kitchen Tools</span>
      </a>
    </div>

    <button
      x-cloak
      class="theme-toggle"
      @click="$store.theme.mode === 'dark' ? $store.theme.enableLightMode() : $store.theme.enableDarkMode()"
      aria-label="Toggle dark mode"
    >
      <template x-if="$store.theme.mode == 'light'">
        <Icon name="tabler:moon" />
      </template>

      <template x-if="$store.theme.mode == 'dark'">
        <Icon name="tabler:sun" />
      </template>
    </button>
  </div>
</nav>

<div class="h-16"></div> <!-- Spacer to account for fixed navbar -->

<style>
  /* Notebook tabs at the top */
  .notebook-tabs {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 2px;
    z-index: 12;
  }
  
  .notebook-tabs .tab {
    padding: 0.25rem 1rem;
    background-color: var(--primary-color);
    color: white;
    border-radius: 0.5rem 0.5rem 0 0;
    font-family: var(--cursive-font);
    font-size: 0.9rem;
    transform: translateY(-60%);
    opacity: 0.7;
    transition: all 0.3s ease;
    cursor: pointer;
    box-shadow: inset 0 -5px 10px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    gap: 0.5rem;
    position: relative;
    overflow: hidden;
  }
  
  .notebook-tabs .tab::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(45deg, rgba(255,255,255,0.1) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.1) 50%, rgba(255,255,255,0.1) 75%, transparent 75%);
    background-size: 8px 8px;
    opacity: 0.3;
    z-index: 0;
  }
  
  .notebook-tabs .tab span,
  .notebook-tabs .tab .tab-icon {
    position: relative;
    z-index: 1;
  }
  
  .tab-icon {
    width: 1rem;
    height: 1rem;
  }
  
  .notebook-tabs .tab.active,
  .notebook-tabs .tab:hover {
    transform: translateY(-100%);
    opacity: 1;
  }
</style>

<script is:inline>
  function handleThemeChange(isDarkMode) {
    document.documentElement.classList.toggle("dark", isDarkMode);

    // Update the theme-color meta for the appropriate colors in the broweser
    const themeColor = document.querySelector("meta[name=theme-color]");
    themeColor.setAttribute("content", isDarkMode ? "#3A4D30" : "#F5F5EB");
  }

  const persistedDarkModeFlag = (localStorage.getItem("theme") ?? "") === "dark";
  const prefersDarkMode = !("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches;

  // @fixes: so that we don't have to tap twice to switch to light mode on first visit if the device prefers dark mode
  if (prefersDarkMode && !(localStorage.getItem("theme") ?? "")) {
    localStorage.setItem("theme", JSON.stringify("dark"));
  }

  // Set the theme on page load
  handleThemeChange(persistedDarkModeFlag || prefersDarkMode);

  // Initialize Alpine store for theme
  document.addEventListener("alpine:init", () => {
    Alpine.store("theme", {
      mode: persistedDarkModeFlag || prefersDarkMode ? "dark" : "light",

      setMode(value) {
        this.mode = value;
        localStorage.setItem("theme", value);
        handleThemeChange(value === "dark");
      },

      enableDarkMode() {
        this.setMode("dark");
      },

      enableLightMode() {
        this.setMode("light");
      },
    });
  });
  
  // Handle notebook tabs
  document.addEventListener('DOMContentLoaded', function() {
    const tabs = document.querySelectorAll('.notebook-tabs .tab');
    
    // Set active tab based on current page
    const currentPath = window.location.pathname;
    
    if (currentPath === '/') {
      setActiveTab(0);
    } else if (currentPath.includes('/blog') || currentPath.includes('/posts')) {
      setActiveTab(1);
    } else if (currentPath.includes('/notes')) {
      setActiveTab(2);
    } else if (currentPath.includes('/tools') || currentPath.includes('/projects')) {
      setActiveTab(3);
    }
    
    // Set active tab on click
    tabs.forEach((tab, index) => {
      tab.addEventListener('click', function() {
        switch (index) {
          case 0:
            window.location.href = '/';
            break;
          case 1:
            window.location.href = '/blog';
            break;
          case 2:
            window.location.href = '/notes';
            break;
          case 3:
            window.location.href = '/tools';
            break;
        }
      });
    });
    
    function setActiveTab(index) {
      tabs.forEach(tab => tab.classList.remove('active'));
      if (tabs[index]) {
        tabs[index].classList.add('active');
      }
    }
  });
</script>
