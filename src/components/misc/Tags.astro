---
import Show from "./Show.astro"
import { slugify } from "@lib/utils";
export interface Props {
  data?: string[];
  tags?: string[];
}

// Accept either 'data' or 'tags' prop to make the component more flexible
const { data, tags: propTags } = Astro.props;
const tags = data || propTags || [];

---
<Show when={tags && tags.length > 0}>
    <div class="flex gap-2 flex-wrap">
      {tags.map((tag) => (
        <!-- prettier-ignore -->
        <a href={"/tags/" + slugify(tag)} class="recipe-tag">{tag?.toLowerCase()?.trim()}</a>
      ))}
    </div>
</Show>

<style>
  .recipe-tag {
    display: inline-block;
    background-color: rgba(81, 115, 63, 0.15);
    color: var(--primary-color, #51733F);
    font-size: theme("fontSize.xs");
    padding: theme("spacing[0.5]") theme("spacing.2");
    border-radius: theme("borderRadius.full");
    text-decoration: none;
    font-weight: theme("fontWeight.medium");
    transition: all 0.2s ease;
    margin-right: theme("spacing.1");
    margin-bottom: theme("spacing.1");
    border: 1px dashed var(--primary-color, #51733F);
    text-transform: lowercase;
    font-family: var(--handwriting-font);
    position: relative;
    z-index: 1;
  }
  
  .recipe-tag:hover {
    background-color: rgba(81, 115, 63, 0.25);
    color: var(--primary-color-dark, #3c5a2d);
    transform: translateY(-1px) rotate(-1deg);
  }
  
  /* Dark mode specific styling with better contrast */
  :global(.dark) .recipe-tag {
    background-color: rgba(169, 199, 111, 0.15);
    color: var(--primary-color-light, #a9c76f);
    border-color: var(--primary-color-light, #a9c76f);
  }
  
  :global(.dark) .recipe-tag:hover {
    background-color: rgba(169, 199, 111, 0.25);
    color: var(--primary-color-light, #a9c76f);
  }
</style>
