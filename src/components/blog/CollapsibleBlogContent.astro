---
// This component wraps blog content and makes it collapsible on both desktop and mobile
---

<div class="mobile-ribbon">Reads better on desktop <span class="heart">â™¡</span></div>

<div class="collapsible-content collapsed" id="collapsible-blog-content">
  <div class="blog-content-wide">
    <slot />
  </div>
  <div class="fade-overlay"></div>
</div>

<button type="button" id="toggle-content-btn" class="toggle-content-btn">
  Read more
  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
    <path d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
  </svg>
</button>

<style>
  .mobile-ribbon {
    display: none;
    position: fixed;
    bottom: 20px;
    right: -40px;
    transform: rotate(-45deg);
    background-color: #51733F;
    color: white;
    padding: 5px 40px;
    font-family: var(--handwriting-font);
    font-size: 0.85rem;
    z-index: 100;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    text-align: center;
  }
  
  .heart {
    color: white;
    font-size: 1rem;
    display: inline-block;
    transform: translateY(1px);
    margin-left: 2px;
  }
  
  .dark .mobile-ribbon {
    background-color: #66845A;
  }
  
  /* Read more button styling */
  .toggle-content-btn {
    display: flex;
    margin: 1.5rem auto;
    padding: 0.5rem 1.5rem;
    background-color: #f5f5f0;
    border: 1px dashed #51733F;
    border-radius: 0.25rem;
    color: #51733F;
    font-family: var(--handwriting-font);
    font-size: 1.1rem;
    cursor: pointer;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
    width: auto;
    min-width: 120px;
    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.05);
    position: relative;
    z-index: 11;
  }
  
  .toggle-content-btn:hover {
    background-color: #51733F;
    color: white;
    transform: translateY(-1px);
    box-shadow: 2px 3px 5px rgba(0, 0, 0, 0.1);
  }
  
  .dark .toggle-content-btn {
    background-color: #2d3748;
    border-color: #66845A;
    color: #a9c76f;
  }
  
  .dark .toggle-content-btn:hover {
    background-color: #66845A;
    color: white;
  }
  
  /* Collapsible content container */
  .collapsible-content {
    position: relative;
    width: 100%;
    overflow: hidden;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }
  
  /* Wide content wrapper */
  .blog-content-wide {
    width: 100%;
  }
  
  /* Make code blocks and other content fit properly */
  .collapsible-content :global(pre) {
    max-width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  
  .collapsible-content :global(code) {
    max-width: 100%;
    word-wrap: break-word;
  }
  
  .collapsible-content :global(table) {
    max-width: 100%;
    overflow-x: auto;
    display: block;
  }
  
  .collapsible-content :global(img) {
    max-width: 100%;
    height: auto;
    display: block;
  }
  
  /* Force content to stay within its container */
  .collapsible-content :global(p),
  .collapsible-content :global(h1),
  .collapsible-content :global(h2),
  .collapsible-content :global(h3),
  .collapsible-content :global(h4),
  .collapsible-content :global(h5),
  .collapsible-content :global(h6),
  .collapsible-content :global(ul),
  .collapsible-content :global(ol),
  .collapsible-content :global(blockquote) {
    width: 100%;
    max-width: 100%;
    word-wrap: break-word;
    overflow-wrap: break-word;
    box-sizing: border-box;
  }
  
  /* Fade overlay styling */
  .fade-overlay {
    display: none;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 200px;
    background: linear-gradient(to bottom, rgba(245, 245, 235, 0), rgba(245, 245, 235, 0.9), rgba(245, 245, 235, 1));
    pointer-events: none;
    z-index: 10;
  }
  
  .dark .fade-overlay {
    background: linear-gradient(to bottom, rgba(74, 85, 104, 0), rgba(74, 85, 104, 0.9), rgba(74, 85, 104, 1));
  }
  
  /* Collapsed state height limits */
  .collapsible-content.collapsed {
    max-height: 400px;
  }
  
  /* Expanded state */
  .collapsible-content:not(.collapsed) {
    max-height: none;
  }
  
  /* Show fade overlay only when collapsed */
  .collapsible-content.collapsed .fade-overlay {
    display: block;
  }
  
  /* Mobile specific adjustments */
  @media (max-width: 767px) {
    .mobile-ribbon {
      display: block;
    }
    
    .collapsible-content.collapsed {
      max-height: 300px;
    }
    
    .toggle-content-btn {
      width: 80%;
      margin: 1rem auto;
      font-size: 1rem;
    }
  }
  
  /* Desktop width fixes */
  @media (min-width: 768px) {
    .collapsible-content {
      width: 100%;
    }
    
    .blog-content-wide {
      width: 100%;
      display: block;
    }
    
    /* Ensure all content is full width */
    .blog-content-wide :global(*) {
      max-width: 100%;
      width: 100%;
    }
  }
</style>

<script is:inline>
  // Wait for document to be ready
  document.addEventListener('DOMContentLoaded', setupCollapsible);
  document.addEventListener('astro:page-load', setupCollapsible);
  
  function setupCollapsible() {
    const contentEl = document.getElementById('collapsible-blog-content');
    const toggleBtn = document.getElementById('toggle-content-btn');
    
    if (!contentEl || !toggleBtn) {
      console.error('Collapsible blog elements not found');
      return;
    }
    
    // Ensure button is visible
    if (toggleBtn instanceof HTMLElement) {
      toggleBtn.style.display = 'flex';
    }
    
    // Wait for content to render fully
    setTimeout(() => {
      const contentHeight = contentEl.scrollHeight;
      console.log('Content height:', contentHeight);
      
      // If content is short, remove collapse
      if (contentHeight <= 500) {
        contentEl.classList.remove('collapsed');
        if (toggleBtn instanceof HTMLElement) {
          toggleBtn.style.display = 'none';
        }
        return;
      }
      
      // Add click handler
      toggleBtn.addEventListener('click', () => {
        const isCollapsed = contentEl.classList.contains('collapsed');
        
        // Toggle the class
        if (isCollapsed) {
          contentEl.classList.remove('collapsed');
          toggleBtn.innerHTML = `
            Show less
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
              <path d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"/>
            </svg>
          `;
        } else {
          contentEl.classList.add('collapsed');
          toggleBtn.innerHTML = `
            Read more
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
              <path d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"/>
            </svg>
          `;
        }
      });
    }, 200);
  }
</script>
